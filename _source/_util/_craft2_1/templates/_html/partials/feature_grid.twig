{# set media query that matches $mq_grid_start in `_source/_sass/_mixins.scss` #}
{% set mqGridStart = '730px' %}

{% import 'macros/buttons' as buttons %}
{% import 'macros/gallery_grid_item' as galleryGridItem %}

{# write css code that displays an image background on a grid item `.background` element #}
{% macro gridBackgroundCss(data) %}
    .grid_item_{{ data.id }} .background:not([data-lazy-load]) {
        background-position: {{ data.focalPoint }};
    }
    .grid_item_{{ data.id }}.mobile .background:not([data-lazy-load]) {
        background-image: url({{ data.imageFile.url }});
    }
    {% for size in data.imageSizes %}
        @media (min-width:{{ size.mq }}) {
            .grid_item_{{ data.id }} .background:not([data-lazy-load]) {
                background-image: url({{ data.imageFile.url }});
            }
        }
    {% endfor %}
{% endmacro %}

{# use table fields to design grid layout #}
{% macro gridLayoutCss(grid, selector, gridLayoutSource, data) %}
    {% for i in 1..grid|length %}
        {{ selector }} > *:nth-child({{ loop.index }}) {
            grid-area: grid{{ loop.index }};
        }
    {% endfor %}

    {% for size in data %}
        {% if gridLayoutSource == 'default' and (data[loop.index].mq ?? false) %}
            {% set nextMq = (data[loop.index].mq|replace('px', '') - 1) ~ 'px' %}
        {% endif %}

        @media (min-width: {{ size.mq }}){% if nextMq ?? false %} and (max-width:{{ nextMq }}){% endif %} {
            {{ selector }} {
                grid-template-areas:
                    {% for row in size.layout %}
                        "{% if row.one ?? false %}grid{{ row.one }}{% endif %}{% if row.two ?? false %} grid{{ row.two }}{% endif %}{% if row.three ?? false %} grid{{ row.three }}{% endif %}{% if row.four ?? false %} grid{{ row.four }}{% endif %}{% if row.five ?? false %} grid{{ row.five }}{% endif %}{% if row.six ?? false %} grid{{ row.six }}{% endif %}"{% if loop.last %};{% endif %}

                    {% endfor %}
                grid-template-columns: repeat({{ size.columns }}, 1fr);
                grid-template-rows: repeat({{ size.layout|length }}, 150px);
            }
            {% if gridLayoutSource == 'default' %}
                {{ selector }} > div:nth-child(1n + {{ (size.columns + 1) }}) {
                    display: none;
                }
            {% endif %}
        }
    {% endfor %}
{% endmacro %}

{% if grid|length %}
    <section class="grid_feature_grid wrapper wrapper--grid">
        {% set css = '' %}

        {% for block in grid %}
            {% switch block.type.handle %}
                {% case 'clients' %}
                    <gallery-grid-item class="item{{ block.showOnMobile ? ' mobile' : '' }}" grid-item-type="{{ block.type.handle }}">{% spaceless %}
                        <a class="grid_client_list" href="#">
                            <div class="header">{{ (block.header ?? false) ? block.header|nl2br : 'Clients of all<br>shapes and sizes:' }}</div>
                            <div id="client_list" class="clients">
                                {% set list = [] %}
                                {% for client in block.list %}
                                    {% set list = list|merge([client.clientName|nl2br|raw]) %}
                                {% endfor %}

                                <div class="text" data-typewriter data-typewriter-period="2000" data-typewriter-list='[ "{{ list|join('", "') }}" ]'>{{ block.list[0].clientName|nl2br }}</div>
                            </div>
                            <div class="cta">View all</div>
                        </a>
                    {% endspaceless %}</gallery-grid-item>
                {% case 'imageOrVideo' %}
                    <gallery-grid-item class="item square{{ block.showOnMobile ? ' mobile' : '' }} grid_item_{{ block.id }}" grid-item-type="{{ block.type.handle }}">{% spaceless %}
                        <div class="background" data-lazy-load></div>
                        <div class="foreground"></div>
                    {% endspaceless %}</gallery-grid-item>
                    {% set data = {
                        id: block.id,
                        focalPoint: '50% 50%',
                        imageFile: block.file.first(),
                        mobileWidth: 500,
                        mobileHeight: 500,
                        imageSizes: [
                            { mq: mqGridStart, width: 300, height: 300 },
                            { mq: '1024px', width: 600, height: 600 },
                        ]
                    } %}
                    {% set newCss %}
                        {{ _self.gridBackgroundCss(data) }}
                    {% endset %}
                {% case 'teamMember' %}
                    {{ galleryGridItem.team(block.employee.first()) }}
                {% case 'text' %}
                    <gallery-grid-item class="item{{ block.showOnMobile ? ' mobile' : '' }} grid_item_{{ block.id }}" grid-item-type="{{ block.type.handle }}">{% spaceless %}
                        <div class="grid_text {% if block.media.first ?? false %}{{ block.mediaLayout }}{% endif %}">
                            {% if block.media.first ?? false %}
                                {% set data = {
                                    id: block.id,
                                    focalPoint: '50% 50%',
                                    imageFile: block.media.first(),
                                    mobileWidth: 500,
                                    mobileHeight: 500,
                                    imageSizes: [
                                        { mq: mqGridStart, width: 300, height: 300 },
                                        { mq: '1024px', width: 600, height: 600 },
                                    ]
                                } %}
                                {% set newCss %}
                                    {{ _self.gridBackgroundCss(data) }}
                                {% endset %}
                                <div class="media background" data-lazy-load></div>
                            {% endif %}
                            <div class="text">
                                <div class="content">
                                    {% if block.header ?? false %}<div class="header">{{ block.header|raw|nl2br }}</div>{% endif %}
                                    <div class="body">{{ block.body }}</div>
                                    {% if block.linkToPage.first ?? block.linkToUrl ?? false %}{{ buttons.default({ label: (block.buttonLabel ?? 'Learn more'), url: (block.linkToPage.first ?? block.linkToUrl) }) }}{% endif %}
                                </div>
                            </div>
                        </div>
                    {% endspaceless %}</gallery-grid-item>
            {% endswitch %}
            {% set css = css ~ newCss ?? css %}
        {% endfor %}

        {% set css = css ~ _self.gridLayoutCss(grid, '.grid_feature_grid', gridLayoutSource, gridLayout) %}

        {% includeCss css %}
    </section>
    <script>jsModules.push('vuecomponents');</script>
{% endif %}